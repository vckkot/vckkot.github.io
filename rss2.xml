<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SkyL Blog</title>
    <link>https://vckkot.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>人静而后安，安而能后定，定而能后慧，慧而能后悟，悟而能后得。</description>
    <pubDate>Sun, 04 Jul 2021 13:41:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Hello World</title>
      <link>https://vckkot.github.io/hello-world/</link>
      <guid>https://vckkot.github.io/hello-world/</guid>
      <pubDate>Sun, 04 Jul 2021 13:41:25 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://vckkot.github.io/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>java.io.File 一些基础</title>
      <link>https://vckkot.github.io/java.io.File%20%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80/</link>
      <guid>https://vckkot.github.io/java.io.File%20%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Wed, 24 Oct 2018 08:58:36 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;File&quot;&gt;&lt;a href=&quot;#File&quot; class=&quot;headerlink&quot; title=&quot;File&quot;&gt;&lt;/a&gt;File&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;java.io.File&lt;br&gt;File表示操作系统中文件系统里的一个文件或目录&lt;br&gt;使用File可以：&lt;br&gt;1.访问一个文件或目录的属性信息&lt;br&gt;2.操作一个文件或目录（创建，删除）&lt;br&gt;3.访问一个目录的子项&lt;br&gt;但是不能使用File访问文件数据&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="File"><a href="#File" class="headerlink" title="File"></a>File</h1><hr><blockquote><p>java.io.File<br>File表示操作系统中文件系统里的一个文件或目录<br>使用File可以：<br>1.访问一个文件或目录的属性信息<br>2.操作一个文件或目录（创建，删除）<br>3.访问一个目录的子项<br>但是不能使用File访问文件数据</p></blockquote><a id="more"></a><h3 id="Flie方法"><a href="#Flie方法" class="headerlink" title="Flie方法"></a>Flie方法</h3><ul><li>在创建File的时候书写路径尽量使用相对路径，避免平台差异化，目录层级别分割符应当使用File里面的一个常量<code>File.separator</code>，常见的相对路径：</li><li>1.<code>“.”</code>：表示当前目录，当前目录运行环境不同路径也不同，在eclipse中运行java程序时的当前目录类所在项目的根目录</li><li>2.类的加载路径<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line"><span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"."</span>+<span class="keyword">File</span>.separator+<span class="string">"test.txt"</span>);</span><br><span class="line">String name= <span class="keyword">file</span>.getName();</span><br><span class="line">System.out.<span class="keyword">println</span>(name);<span class="comment">//读取文件名字</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> length = <span class="keyword">file</span>.length();</span><br><span class="line">System.out.<span class="keyword">println</span>(length);<span class="comment">//读取文件大小</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> canRead = <span class="keyword">file</span>.canRead();<span class="comment">//是否可读</span></span><br><span class="line"><span class="keyword">boolean</span> canWrite = <span class="keyword">file</span>.canWrite();<span class="comment">//是否可写</span></span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"可读:"</span>+canRead);</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"可写:"</span>+canWrite);</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isHidden = <span class="keyword">file</span>.isHidden();<span class="comment">//是否隐藏</span></span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"是否为隐藏："</span>+isHidden);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="boolean-createNewFile"><a href="#boolean-createNewFile" class="headerlink" title="boolean    createNewFile()"></a>boolean    createNewFile()</h4><blockquote><p>当且仅当不存在具有此抽象路径名指定名称的文件时，不可分地创建一个新的空文件。</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"> <span class="comment">//在当前文件下创建一个demo.txt的文件</span></span><br><span class="line"><span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"."</span>+<span class="keyword">File</span>.separator+<span class="string">"demo1.txt"</span>);</span><br></pre></td></tr></table></figure><blockquote><p> boolean exists()</p></blockquote><ul><li>判断File表示的文件或目录是否真实存在<figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">file</span>.exists()) &#123;</span><br><span class="line"><span class="keyword">file</span>.createNewFile();<span class="comment">//报错补错</span></span><br><span class="line"><span class="keyword">System</span>.out.println(<span class="string">"文件创建完毕！"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">System</span>.out.println(<span class="string">"文件已经存在！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="获取当前目录中的所有子项"><a href="#获取当前目录中的所有子项" class="headerlink" title="获取当前目录中的所有子项"></a>获取当前目录中的所有子项</h3><h4 id="boolean-isFile"><a href="#boolean-isFile" class="headerlink" title="boolean isFile()"></a>boolean isFile()</h4><blockquote><p>判断当前File表示的是否为一个文件</p></blockquote><h4 id="boolean-isDirectory"><a href="#boolean-isDirectory" class="headerlink" title="boolean isDirectory()"></a>boolean isDirectory()</h4><blockquote><p>判断当前File表示的是否为一个目录</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">File dir = new File(<span class="string">"."</span>);</span><br><span class="line"><span class="keyword">if</span>(dir.isDirectory()) &#123;</span><br><span class="line">File[] subs = dir.listFiles();</span><br><span class="line">System.out.println(subs.length);<span class="regexp">//</span>有多少文件和目录</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;subs.length; i++) &#123;</span><br><span class="line">File <span class="function"><span class="keyword">sub</span> = <span class="title">subs</span>[<span class="title">i</span>]</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="function"><span class="keyword">sub</span>.<span class="title">isDirectory</span>()) </span>&#123;//判断是否为目录</span><br><span class="line">System.out.<span class="keyword">print</span>(<span class="string">"目录："</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="function"><span class="keyword">sub</span>.<span class="title">isFile</span>()) </span>&#123;//判断是否为文件</span><br><span class="line">System.out.<span class="keyword">print</span>(<span class="string">"文件："</span>);</span><br><span class="line">&#125;System.out.println(<span class="function"><span class="keyword">sub</span>.<span class="title">getName</span></span>());//输出文件名</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="boolean-accept-File-pathname"><a href="#boolean-accept-File-pathname" class="headerlink" title="boolean accept(File pathname)"></a>boolean accept(File pathname)</h4><blockquote><p>测试指定抽象路径名是否应该包含在某个路径名列表中。</p><ul><li><code>File</code>提供了一个重载的<code>listFire</code>方法</li><li>该方法允许我们传入一个文件过滤器<code>FileFilter</code></li><li>该方法会将<code>File</code>表示的目录中所有满足过滤器要求的子项返回，而不满足的则被忽略。</li></ul></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> File_listFiles2 &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line"> <span class="comment">//获取当前路径中所有名字以“.”开头的子项 </span></span><br><span class="line"><span class="keyword">File</span> dir = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"."</span>);</span><br><span class="line">FileFilter FileFilter = <span class="keyword">new</span> FileFilter() &#123;</span><br><span class="line"><span class="comment">// booleanaccept(File pathname) </span></span><br><span class="line"><span class="comment">//测试指定抽象路径名是否应该包含在某个路径名列表中。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> accept(<span class="keyword">File</span> <span class="keyword">file</span>) &#123;</span><br><span class="line">String name = <span class="keyword">file</span>.getName();<span class="comment">//获取不符合“.”开头的文件</span></span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"正在过滤子项："</span>+name);</span><br><span class="line"><span class="keyword">return</span> name.startsWith(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">File</span>[] subs = dir.listFiles(FileFilter);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;subs.length; i++) &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(subs[i].getName());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="boolean-mkdir"><a href="#boolean-mkdir" class="headerlink" title="boolean mkdir()"></a>boolean mkdir()</h4><blockquote><p>创建一个目录</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class File_mkdir &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line"><span class="comment">//在当前目录中创建一个名为demo的目录</span></span><br><span class="line"><span class="built_in">File</span> dir = <span class="keyword">new</span> <span class="built_in">File</span>(<span class="string">"demo"</span>);</span><br><span class="line"><span class="built_in">if</span>(!dir.<span class="built_in">exists</span>()) &#123;</span><br><span class="line">dir.<span class="built_in">mkdir</span>();</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"该目录已创建！"</span>);</span><br><span class="line">&#125;<span class="built_in">else</span> &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"该目录已存在！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="boolean-mkdirs"><a href="#boolean-mkdirs" class="headerlink" title="boolean mkdirs()"></a>boolean mkdirs()</h4><blockquote><p>创建一个多级目录</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line"><span class="comment">//在当前目录中创建 a/b/c/d/e/f</span></span><br><span class="line"><span class="built_in">File</span> dirs  = <span class="keyword">new</span> <span class="built_in">File</span>(<span class="string">"a"</span>+<span class="built_in">File</span>.separator+<span class="string">"b"</span>+<span class="built_in">File</span>.separator+<span class="string">"c"</span>+<span class="built_in">File</span>.separator+<span class="string">"d"</span>+<span class="built_in">File</span>.separator+<span class="string">"e"</span>+<span class="built_in">File</span>.separator+<span class="string">"f"</span>);</span><br><span class="line"><span class="built_in">if</span>(!dirs.<span class="built_in">exists</span>()) &#123;</span><br><span class="line"><span class="comment">//mkdirs是在创建当前File表示的目录同时将该目录其上的所有不存在的父目录一同创建出来</span></span><br><span class="line">dirs.mkdirs();</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"文件目录创建完毕！"</span>);</span><br><span class="line">&#125;<span class="built_in">else</span> &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"文件目录已存在！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="boolean-delete"><a href="#boolean-delete" class="headerlink" title="boolean delete()"></a>boolean delete()</h4><blockquote><p>删除一个文件</p></blockquote><ul><li><p>将当前目录中的demo.txt删除<br>相对路径默认是从“当前目录”开始<br>所以，<code>new File(&quot;demo.txt&quot;）</code>等同<code>new File(&quot;./demo.txt)</code></p></li><li><p>注：delete方法在删除目录的时候，需要注意，只能删除空目录；</p></li></ul><blockquote><p>删除一个文件：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"demo.txt"</span>);</span><br><span class="line"><span class="keyword">if</span>(file.exists()) &#123;</span><br><span class="line">file.delete();</span><br><span class="line">System.out.println(<span class="string">"文件已删除"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"该文件不存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除一个目录：</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line"><span class="built_in">File</span> del = <span class="keyword">new</span> <span class="built_in">File</span>(<span class="string">"demo"</span>);<span class="comment">//将当前目录中的demo目录删除</span></span><br><span class="line"><span class="built_in">if</span>(del.<span class="built_in">exists</span>()) &#123;</span><br><span class="line"><span class="comment">// delete方法在删除目录的时候，需要注意，只能删除空目录；</span></span><br><span class="line">del.<span class="keyword">delete</span>();<span class="comment">//必须是空目录才能删</span></span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"目录已删除！"</span>);</span><br><span class="line">&#125;<span class="built_in">else</span> &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"该目录不存在！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content:encoded>
      
      <comments>https://vckkot.github.io/java.io.File%20%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>版权测试</title>
      <link>https://vckkot.github.io/%E7%89%88%E6%9D%83%E6%B5%8B%E8%AF%95/</link>
      <guid>https://vckkot.github.io/%E7%89%88%E6%9D%83%E6%B5%8B%E8%AF%95/</guid>
      <pubDate>Wed, 24 Oct 2018 06:25:54 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://vckkot.github.io/%E7%89%88%E6%9D%83%E6%B5%8B%E8%AF%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>评论测试</title>
      <link>https://vckkot.github.io/%E8%AF%84%E8%AE%BA%E6%B5%8B%E8%AF%95/</link>
      <guid>https://vckkot.github.io/%E8%AF%84%E8%AE%BA%E6%B5%8B%E8%AF%95/</guid>
      <pubDate>Thu, 18 Oct 2018 09:23:24 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://vckkot.github.io/%E8%AF%84%E8%AE%BA%E6%B5%8B%E8%AF%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC</title>
      <link>https://vckkot.github.io/JDBC/</link>
      <guid>https://vckkot.github.io/JDBC/</guid>
      <pubDate>Wed, 17 Oct 2018 09:29:06 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;JDBC&quot;&gt;&lt;a href=&quot;#JDBC&quot; class=&quot;headerlink&quot; title=&quot;JDBC&quot;&gt;&lt;/a&gt;JDBC&lt;/h1&gt;&lt;p&gt;@(Java)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;ResultSetMetaData&quot;&gt;&lt;a href=&quot;#ResultSetMetaData&quot; class=&quot;headerlink&quot; title=&quot;ResultSetMetaData&quot;&gt;&lt;/a&gt;ResultSetMetaData&lt;/h2&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h3 id=&quot;1-MetaData–元数据&quot;&gt;&lt;a href=&quot;#1-MetaData–元数据&quot; class=&quot;headerlink&quot; title=&quot;1. MetaData–元数据&quot;&gt;&lt;/a&gt;1. MetaData–元数据&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;是指结果集对象的相关其他数据,比如说总列数,每一列的名称,每一列的sql数据类型,每一列的java数据类型等&lt;blockquote&gt;
&lt;p&gt;案例演示&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Connection conn=null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; sql=&lt;span class=&quot;string&quot;&gt;&quot;select id,name,password  from dept where id&amp;lt;?&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            conn=DBUtiles.getConnection();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PreparedStatement ps=conn.prepareStatement(sql);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ps.setInt(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ResultSet rs=ps.executeQuery();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获取结果集的元数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ResultSetMetaData meta=rs.getMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//遍历并显示结果集中所有列的名称       &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= meta.getColumnCount(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(meta.getColumnName(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获得结果集的所有列数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          int n=meta.getColumnCount();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          System.out.println(n);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//通过下标获得结果集的某一列的列名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          String name1=meta.getColumnName(1);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          String name2=meta.getColumnName(2);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          System.out.println(name1);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          System.out.println(name2);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          while (rs.next()) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//              System.out.println(rs.getString(&quot;name&quot;));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//关闭结果集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rs.&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//关闭PS对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ps.&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;built_in&quot;&gt;catch&lt;/span&gt; (SQLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated catch block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;finally &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            DBUtiles.closeConnection(conn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><p>@(Java)</p><hr><h2 id="ResultSetMetaData"><a href="#ResultSetMetaData" class="headerlink" title="ResultSetMetaData"></a>ResultSetMetaData</h2><p>[toc]</p><h3 id="1-MetaData–元数据"><a href="#1-MetaData–元数据" class="headerlink" title="1. MetaData–元数据"></a>1. MetaData–元数据</h3><ul><li>是指结果集对象的相关其他数据,比如说总列数,每一列的名称,每一列的sql数据类型,每一列的java数据类型等<blockquote><p>案例演示</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        Connection conn=null;</span><br><span class="line">        <span class="keyword">String</span> sql=<span class="string">"select id,name,password  from dept where id&lt;?"</span>;</span><br><span class="line">        <span class="built_in">try</span> &#123;</span><br><span class="line">            conn=DBUtiles.getConnection();</span><br><span class="line">            PreparedStatement ps=conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line">            ResultSet rs=ps.executeQuery();</span><br><span class="line">            <span class="comment">//获取结果集的元数据</span></span><br><span class="line">            ResultSetMetaData meta=rs.getMetaData();</span><br><span class="line">            <span class="comment">//遍历并显示结果集中所有列的名称       </span></span><br><span class="line">            <span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= meta.getColumnCount(); i++) &#123;</span><br><span class="line">                System.out.<span class="built_in">println</span>(meta.getColumnName(i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获得结果集的所有列数量</span></span><br><span class="line"><span class="comment">//          int n=meta.getColumnCount();</span></span><br><span class="line"><span class="comment">//          System.out.println(n);</span></span><br><span class="line">            <span class="comment">//通过下标获得结果集的某一列的列名</span></span><br><span class="line"><span class="comment">//          String name1=meta.getColumnName(1);</span></span><br><span class="line"><span class="comment">//          String name2=meta.getColumnName(2);</span></span><br><span class="line"><span class="comment">//          System.out.println(name1);</span></span><br><span class="line"><span class="comment">//          System.out.println(name2);</span></span><br><span class="line"><span class="comment">//          while (rs.next()) &#123;</span></span><br><span class="line"><span class="comment">//              System.out.println(rs.getString("name"));</span></span><br><span class="line"><span class="comment">//          &#125;</span></span><br><span class="line">            <span class="comment">//关闭结果集</span></span><br><span class="line">            rs.<span class="built_in">close</span>();</span><br><span class="line">            <span class="comment">//关闭PS对象</span></span><br><span class="line">            ps.<span class="built_in">close</span>();</span><br><span class="line">        &#125; <span class="built_in">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            DBUtiles.closeConnection(conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ul><a id="more"></a><hr><h3 id="2-由于jdbc自动提交事务-所以需要手动关闭"><a href="#2-由于jdbc自动提交事务-所以需要手动关闭" class="headerlink" title="2.由于jdbc自动提交事务,所以需要手动关闭"></a>2.由于jdbc自动提交事务,所以需要手动关闭</h3><blockquote><p>案例演示<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Demo2</span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 由于JDBC自动事务提交</span></span><br><span class="line"><span class="comment"> * 1.关闭自动提交conn.setAutoCommit(false);</span></span><br><span class="line"><span class="comment"> * 2.try的最后部分手动提交conn.commit();</span></span><br><span class="line"><span class="comment"> * 3.由于一出现错误,就会运行catch块</span></span><br><span class="line"><span class="comment"> *   在catch中conn.rollback();</span></span><br><span class="line"><span class="comment"> * 4.封装回滚方法</span></span><br><span class="line"><span class="comment"> * @param args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">static</span> String sql1=<span class="string">"update bal set"</span></span><br><span class="line">            + <span class="string">" money=money+? where id=?"</span>;</span><br><span class="line">    <span class="keyword">static</span> String sql2=<span class="string">"select money from bal where id=?"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">        pay(<span class="number">2</span>, <span class="number">4</span>, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pay</span>(<span class="params"><span class="keyword">int</span> <span class="keyword">from</span>,<span class="keyword">int</span> to,<span class="keyword">double</span> money</span>)</span>&#123;</span><br><span class="line">        Connection conn=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn=DBUtiles.getConnection();</span><br><span class="line">            <span class="comment">//关闭自动commit</span></span><br><span class="line">            conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            PreparedStatement ps=conn.prepareStatement(sql1);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 业务模块---a--&gt;b 打1000</span></span><br><span class="line"><span class="comment">             * create table bal(</span></span><br><span class="line"><span class="comment">             * id int,</span></span><br><span class="line"><span class="comment">             * name varchar(20),</span></span><br><span class="line"><span class="comment">             * money double(8,2)</span></span><br><span class="line"><span class="comment">             * )</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//a-1000</span></span><br><span class="line">            ps.setDouble(<span class="number">1</span>, -money);</span><br><span class="line">            ps.setInt(<span class="number">2</span>, <span class="keyword">from</span>);</span><br><span class="line">            <span class="keyword">int</span> n=ps.executeUpdate();</span><br><span class="line">            <span class="comment">//更新失败</span></span><br><span class="line">            <span class="keyword">if</span> (n!=<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"减钱失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//b+1000</span></span><br><span class="line">            ps.setDouble(<span class="number">1</span>, money);</span><br><span class="line">            ps.setInt(<span class="number">2</span>, to);</span><br><span class="line">            n=ps.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (n!=<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"加钱失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ps.close();</span><br><span class="line">            <span class="comment">//检查a有没有1000</span></span><br><span class="line">            ps=conn.prepareStatement(sql2);</span><br><span class="line">            ps.setInt(<span class="number">1</span>, <span class="keyword">from</span>);</span><br><span class="line">            ResultSet rs=ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="keyword">double</span> bal=rs.getDouble(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (bal&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"余额不足"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//手动提交</span></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            DBUtiles.rollback(conn);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtiles.closeConnection(conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><hr><h3 id="批量更新"><a href="#批量更新" class="headerlink" title="批量更新"></a>批量更新</h3><ul><li><p>把多条sql存入<code>Statement</code>对象的缓存,一次性发送给DB执行</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Statement sta=conn.createStatement()<span class="comment">;</span></span><br><span class="line">//          sta.addBatch(sql1)<span class="comment">;</span></span><br><span class="line">//          sta.addBatch(sql2)<span class="comment">;         </span></span><br><span class="line">//          int[] arr=sta.executeBatch()<span class="comment">;</span></span><br></pre></td></tr></table></figure></li><li><p>创建一个执行计划,把多条参数存入<code>PreParedStatement</code>对象缓存中,一次性发送给DB执行</p></li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement ps=conn.prepareStatement(sql6)<span class="comment">;           </span></span><br><span class="line">ps.setInt(<span class="number">1</span>, <span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">ps.setString(<span class="number">2</span>, <span class="string">"lili"</span>)<span class="comment">;</span></span><br><span class="line">ps.<span class="keyword">addBatch(); </span>         </span><br><span class="line">int[] arr=ps.executeBatch()<span class="comment">;</span></span><br></pre></td></tr></table></figure><blockquote><p>内存溢出OutOfMemory</p></blockquote><h3 id="获取自动生成的主键"><a href="#获取自动生成的主键" class="headerlink" title="获取自动生成的主键"></a>获取自动生成的主键</h3><ul><li><p><code>String[] colNames={&quot;id&quot;};</code> 自动生成值的列的列名</p></li><li><p><code>PreparedStatement ps =conn.prepareStatement(sql1, colNames);</code>必须与上面的命令一起使用 <code>ps.getGeneratedKeys()</code></p></li></ul><blockquote><p>案例演示</p></blockquote><pre><code>    public static void main(String[] args) {        String sql1=&quot;create table &quot;                + &quot;log1 (id int ,msg varchar(20))&quot;;        String sql2=&quot;create table &quot;                + &quot;log2 (id int ,msg varchar(20))&quot;;        String sql3=&quot;create table &quot;                + &quot;log3 (id int ,msg varchar(20))&quot;;        String sql4=&quot;create table &quot;                + &quot;log4 (id int ,msg varchar(20))&quot;;        String sql5=&quot;create table &quot;                + &quot;log5 (id int ,msg varchar(20))&quot;;        String sql6=&quot;insert into log1 values &quot;                + &quot;(?,?)&quot;;        String sql7=&quot;insert into log2 values &quot;                + &quot;(?,?)&quot;;        //获得连接对象        Connection conn=null;        try {            conn=DBUtiles.getConnection();            //批量更新的第一种方法            //把多个sql语句存入sta对象的缓存中//          Statement sta=conn.createStatement();//          sta.addBatch(sql1);//          sta.addBatch(sql2);//          sta.addBatch(sql3);//          sta.addBatch(sql4);//          sta.addBatch(sql5);            //一次性发送给数据库执行            //返回值 &gt;=0---成功,有结果            //返回值-2----成功,没有结果            //返回值-3----不成功//          int[] arr=sta.executeBatch();//          System.out.println(Arrays.toString(arr));            //第二中批量更新的方式            //使用ps固定一个执行计划            //把一堆参数存入ps的缓存            //一次性发送给DB,进行处理//          PreparedStatement ps=conn.prepareStatement(sql6);//          //          ps.setInt(1, 1);//          ps.setString(2, &quot;lili&quot;);//          ps.addBatch();//          //          ps.setInt(1, 2);//          ps.setString(2, &quot;lucy&quot;);//          ps.addBatch();//          //          int[] arr=ps.executeBatch();//          System.out.println(Arrays.toString(arr));        PreparedStatement ps =conn.prepareStatement(sql7);        for (int i = 1; i &lt; 100; i++) {            ps.setInt(1, i);            ps.setString(2, &quot;test&quot;+i);            ps.addBatch();            if (i%8==0) {//97.98.99                ps.executeBatch();            }        }            ps.executeBatch();        } catch (Exception e) {            e.printStackTrace();        }finally {            DBUtiles.closeConnection(conn);        }    }</code></pre><h2 id="DAO"><a href="#DAO" class="headerlink" title="DAO"></a>DAO</h2><ul><li><p>DAO作为数据访问层,把业务逻辑层和数据库分割开来</p></li><li><p>业务逻辑层需要数据,就跟DAO要</p></li><li><p>业务逻辑层要保存数据,就交给DAO,让DAO去保存</p></li><li><p>业务逻辑层不关系数据如何获取,如何保存,全部都由DAO负责</p><blockquote><p>案例演示</p></blockquote><pre><code>  public class UserDAO1 implements UserDAO{    private static final String search_by_id        =&quot;select * from user_1 where id=?&quot;;    private static final String search_all        =&quot;select * from user_1&quot;;    private static final String update_user_password    =&quot;update user_1 set name=?,password=? where id=?&quot;;    private static final String insert_user    =&quot;insert into user_1 values(null,?,?,?)&quot;;    public User findUserById(int id) {        Connection conn=null;        try {            conn=DBUtiles.getConnection();            PreparedStatement ps=conn.prepareStatement(search_by_id);            ps.setInt(1, id);            ResultSet rs=ps.executeQuery();            int i=0;            String name=null;            String pwd=null;            int age=0;            while(rs.next()){                i=rs.getInt(1);                name=rs.getString(2);                pwd=rs.getString(3);                age=rs.getInt(4);            }            return new User(i, name, pwd, age);        } catch (Exception e) {            e.printStackTrace();            DBUtiles.rollback(conn);        }finally{            DBUtiles.closeConnection(conn);        }        return null;    }    public List&lt;User&gt; findAllUser() {        Connection conn=null;        try {            conn=DBUtiles.getConnection();            conn.setAutoCommit(false);            Statement sta=conn.createStatement();            ResultSet rs=sta.executeQuery(search_all);            List&lt;User&gt; list=new ArrayList&lt;User&gt;();            while (rs.next()) {                int i=rs.getInt(1);                String name=rs.getString(2);                String pwd=rs.getString(3);                int age=rs.getInt(4);                User user=new User(i, name, pwd, age);                list.add(user);            }            conn.commit();            return list;        } catch (Exception e) {            e.printStackTrace();            DBUtiles.rollback(conn);        }finally {            DBUtiles.closeConnection(conn);        }        return null;    }    public int updateUser(User user) {        Connection conn=null;        try {            conn=DBUtiles.getConnection();            PreparedStatement ps=conn.prepareStatement(update_user_password);            ps.setString(1, user.getName());            ps.setString(2, user.getPwd());            ps.setInt(3, user.getId());            int n=ps.executeUpdate();            if (n!=1) {                throw new Exception(&quot;修改失败&quot;);            }            ps.close();        } catch (Exception e) {            e.printStackTrace();            DBUtiles.rollback(conn);        }finally {            DBUtiles.closeConnection(conn);        }        return 0;    }    public int saveUser(User user) {        Connection conn=null;        try {            conn=DBUtiles.getConnection();            PreparedStatement ps=conn.prepareStatement(insert_user);            ps.setString(1, user.getName());            ps.setString(2, user.getPwd());            ps.setInt(3, user.getAge());            int n=ps.executeUpdate();            if (n!=1) {                throw new Exception(&quot;插入失败&quot;);            }            ps.close();        } catch (Exception e) {            e.printStackTrace();            DBUtiles.rollback(conn);        }finally {            DBUtiles.closeConnection(conn);        }        return 0;    }}</code></pre></li></ul><hr><blockquote><p>测试类</p></blockquote><pre><code>    public static void main(String[] args) {        //数据---&gt;数据库读取出来的        //验证dao的findUserById方法        UserDAO dao=new UserDAO1();        //验证dao的findall        //List&lt;User&gt; list=dao.findAllUser();        //for (int i = 0; i &lt; list.size(); i++) {        //System.out.println(list.get(i).getId());        //}        //验证dao的修改方法        //User user=new User(2, &quot;xiongda&quot;, &quot;321&quot;, 18);        //dao.updateUser(user);        //验证dao的插入方法        User user=new User(1232, &quot;xiongda&quot;, &quot;321&quot;, 18);        dao.saveUser(user);}</code></pre><hr>]]></content:encoded>
      
      <comments>https://vckkot.github.io/JDBC/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
